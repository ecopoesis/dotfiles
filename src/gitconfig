[user]
	name = mroberts
	email = mroberts@cargurus.com
	signingkey = 72B609CAEB8B69C9
[push]
	default = current
[core]
	trustctime = false
	autocrlf = input
	editor = vim
	excludesfile = /Users/miker/.gitignore_global
[merge]
	tool = intellij
[mergetool "intellij"]
    cmd = idea merge $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE") $(cd $(dirname "$BASE") && pwd)/$(basename "$BASE") $(cd $(dirname "$MERGED") && pwd)/$(basename "$MERGED")
    trustExitCode = true
[diff]
    tool = intellij
[difftool "intellij"]
    cmd = idea diff $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE")
[color]
    ui = auto
[alias]
		# order matters here: historically repo's had master so even after switching to main, they may still dead master branches 
		trunk = !git show-ref --verify --quiet refs/heads/main && echo 'main' || echo 'master' && :
    pu = push -u
    ln = log --pretty=format:' %C(red)%h%Creset | %<(80,trunc)%s | %C(green)%ad%Creset |%C(blue) %ae %Creset' --date=format:'%a %Y-%m-%d %H:%M:%S'
    bls = branch --sort=-committerdate
    co = checkout
    st = status
    ca = commit -a
    ca-nv = commit -a --no-verify
    cap = !git ca && git pu && :
    cap-nv = !git ca-nv && git pu && :
    cob = !git checkout -b $1 && :
    cobf = !git checkout -b feature/$1 && :
    jira = !git co `git trunk` && git pull && git cobf $1 && git commit --allow-empty -m \"[$2]\" && :
    pr = !git pu && hub pull-request -b `git trunk` -F- <<< \"$1 [`git get-jira`]\n\n[[`git get-jira`]]\" && :
    pr-jira = !git pu && hub pull-request -b `git trunk` -F- <<< \"$1 [$2]\n\n[[$2]]\" && :
    rebase = rebase --keep-empty
    mom = !git fetch origin && git merge origin/`git trunk`
    mum = !git fetch upstream && git merge upstream/`git trunk`
    mod = !git fetch origin && git merge origin/develop
    mud = !git fetch origin && git merge upstream/develop
    ci = !git diff --exit-code &>/dev/null && git commit --allow-empty -m \"Force CI Run\" && git pu && :
    branches = branch

    # open GitHub diff view s/.*@\(.*\):.*/\1/
    web = !echo 'git@github.com:ecopoesis/dotfiles.git' | sed 's/.*@\\(.*\\):.*/\\1/' && :
    comp = !git pu && open \"https://$(git web)/$(dirname $(git remote get-url origin) | cut -d':' -f2)/$(basename $(git remote get-url origin) .git)/compare/$(git branch | sed -n 's/^\\* //p')\" && :

    # get the commit message description of the first commit in this branch
    get-first = !git log `git trunk`..`git rev-parse --abbrev-ref HEAD` --pretty=format:%B | tail -1 && :

    # assumes the first commit of a branch had a commit message like [JIRA-123]
    get-jira = !git get-first | tail -c +2 | head -c -2 && :
[pretty]
    colored = format:%Cred%h%Creset %s %Cgreen(%cr) %C(bold blue)%an%Creset
[commit]
	gpgsign = true
